# Generated by Django 5.1.3 on 2025-01-19 00:40

import datetime
import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Documento',
            fields=[
                ('ci1', models.CharField(default='', max_length=10, validators=[django.core.validators.RegexValidator(code='invalid_ci', message='El campo debe contener exactamente 10 dígitos numéricos.', regex='^\\d{10}$')], verbose_name='CI')),
                ('nombre', models.CharField(choices=[('Artculos Scopus o Web of Science', 'Artículos publicados en revistas de bases de datos Scopus o Web of Science'), ('Artículos bases de datos regionales', 'Artículos publicados en revistas de bases de datos regionales'), ('Proceedings', 'Actas de congresos indexados (Proceedings)'), ('Libros y capítulos', 'Libros y capítulos'), ('Proyectos de Investigación', 'Proyectos de Investigación'), ('Proyectos de Vinculación con la sociedad', 'Proyectos de Vinculación con la sociedad')], max_length=50, verbose_name='Tipo de Documento')),
                ('filiacion_UEP', models.CharField(default='', max_length=100)),
                ('carrera', models.CharField(choices=[('Geología', 'Geología'), ('Minas', 'Minas'), ('Petróleos', 'Petróleos'), ('Ambiental', 'Ambiental')], default='No Aplica', max_length=20)),
                ('titulo', models.CharField(default='', max_length=400, primary_key=True, serialize=False, unique=True)),
                ('nombre_revista', models.CharField(blank=True, default='No Aplica', max_length=200, null=True)),
                ('Base_datos', models.CharField(default='No Aplica', max_length=200)),
                ('Año_Base_datos', models.CharField(default='', max_length=200, validators=[django.core.validators.RegexValidator(code='invalid_date', message='El campo debe contener exactamente 4 dígitos numéricos.', regex='^\\d{4}$')])),
                ('nombre_evento_o_compendio', models.CharField(blank=True, default='No Aplica', max_length=200, null=True)),
                ('Editorial', models.CharField(default='No Aplica', max_length=100)),
                ('Filiacion_Autor_es', models.CharField(default='', max_length=100)),
                ('Codigo_ISSN', models.CharField(default='', max_length=100)),
                ('Codigo_ISBN', models.CharField(default='', max_length=100)),
                ('Año_Publiacion', models.CharField(default='', max_length=4, validators=[django.core.validators.RegexValidator(code='invalid_date', message='El campo debe contener exactamente 4 dígitos numéricos.', regex='^\\d{4}$')])),
                ('Estado', models.CharField(choices=[('Libro Total', 'Libro Total'), ('Libro Parcial', 'Libro Parcial'), ('No Aplica', 'No Aplica')], default='No Aplica', max_length=20)),
                ('N_Cap_Par', models.IntegerField(blank=True, default='0', verbose_name='Capítulos Desarrollados por el Autor')),
                ('T_Cap', models.IntegerField(blank=True, default='0', verbose_name='Capítulos Totales desarrollados por el Autor')),
                ('Areas_Niveles', models.CharField(choices=[('Obtenciones Vegetales y Conocimientos Tradicionales', 'Obtenciones Vegetales y Conocimientos Tradicionales'), ('Derechos de Autor y Conexos', 'Derechos de Autor y Conexos'), ('Propiedad Industrial', 'Propiedad Industrial'), ('No Aplica', 'No Aplica')], default='No Aplica', max_length=100)),
                ('link_acceso', models.CharField(default='', max_length=300)),
                ('N_Registro_Senadi', models.CharField(default='', max_length=100)),
                ('Exposicion_Procendings', models.CharField(blank=True, choices=[('Nacional', 'Nacional'), ('Internacional', 'Internacional'), ('No Aplica', 'No Aplica')], default='NA', max_length=20, null=True)),
                ('Revision_pares', models.FileField(blank=True, null=True, upload_to='pdfs/', verbose_name='Documentación que evidencie los procesos de revisión por pares')),
                ('Revision_externos', models.FileField(blank=True, null=True, upload_to='pdfs/', verbose_name='Documentación que evidencie los procesos de revisión por Externos')),
                ('Evidencia_Nacional', models.FileField(blank=True, null=True, upload_to='pdfs/', verbose_name='Documentos que evidencien que la obra fue expuesta eventos, exposiciones nacionales ')),
                ('Evidencia_Internacional', models.FileField(blank=True, null=True, upload_to='pdfs/', verbose_name='Documentos que evidencien que la obra fue expuesta eventos, exposiciones Internacionales')),
                ('Registro_SENADI', models.FileField(blank=True, null=True, upload_to='pdfs/', verbose_name='Certificado de registro de propiedad intelectual en el SENADI')),
                ('Certificados_Exposiciones', models.FileField(blank=True, null=True, upload_to='pdfs/', verbose_name='Certificados/permisos de exposiciones en eventos nacionales e internacionales')),
            ],
            options={
                'verbose_name_plural': 'Fuentes de Información: Indicador 19',
            },
        ),
        migrations.CreateModel(
            name='Indicador20',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Funciones_Sustantivas', models.CharField(choices=[('Docencia', 'Docencia'), ('Investigación e Innovación', 'Investigación e Innovación'), ('Vinculación con la Sociedad', 'Vinculación con la Sociedad')], max_length=50, verbose_name='Funciones Sustantivas')),
                ('carrera', models.CharField(choices=[('Geología', 'Geología'), ('Minas', 'Minas'), ('Petróleos', 'Petróleos'), ('Ambiental', 'Ambiental')], default='No Aplica', max_length=20)),
                ('nombre', models.CharField(default='', max_length=300, verbose_name='Nombre del Proyecto o Programa')),
                ('autores', models.CharField(default='', max_length=300, verbose_name='Autores del Proyecto o Programa')),
                ('Planificaciopn_Proyectos_Programas', models.FileField(blank=True, null=True, upload_to='pdfs/', verbose_name='Documentación que evidencie la planificación de programas/proyectos interdisciplinares')),
                ('Ejecucion_Proyectos_Programas', models.FileField(blank=True, null=True, upload_to='pdfs/', verbose_name='Documentación que evidencie la ejecución de programas/proyectos interdisciplinares')),
                ('Politicas_Procedimientos', models.FileField(blank=True, null=True, upload_to='pdfs/', verbose_name='Políticas o procedimientos definidos para la planificación, ejecución y evaluación de los programas o proyectos interdisciplinares.')),
                ('Syllabus_Asignaturas', models.FileField(blank=True, null=True, upload_to='pdfs/', verbose_name='Syllabus de las asignaturas consideradas en los programas o proyectos interdisciplinares ')),
                ('Productos_Resultados', models.FileField(blank=True, null=True, upload_to='pdfs/', verbose_name='Documentación que evidencien los productos o resultados obtenidos en los proyectos')),
                ('Evidencia_Articulacion', models.FileField(blank=True, null=True, upload_to='pdfs/', verbose_name='Documentación que evidencie el análisis de la articulación de las funciones sustantivas')),
                ('Evidencia_Difusion', models.FileField(blank=True, null=True, upload_to='pdfs/', verbose_name='Documentación o medios que evidencie la difusión de los resultados de los programas o proyectos interdisciplinares')),
                ('Mejora_Gestion', models.FileField(blank=True, null=True, upload_to='pdfs/', verbose_name='Documentación que evidencie las acciones de mejora en la gestión de los programas o proyectos interdisciplinares')),
            ],
            options={
                'verbose_name_plural': 'Fuentes de Información: Indicador 20',
            },
        ),
        migrations.CreateModel(
            name='Personal_Academico',
            fields=[
                ('ci', models.CharField(default='', max_length=10, primary_key=True, serialize=False, unique=True, validators=[django.core.validators.RegexValidator(code='invalid_ci', message='El campo debe contener exactamente 10 dígitos numéricos.', regex='^\\d{10}$')])),
                ('Primer_nombre', models.CharField(default='', max_length=100)),
                ('Segundo_nombre', models.CharField(default='', max_length=100)),
                ('primer_apellido', models.CharField(default='', max_length=100)),
                ('segundo_apellido', models.CharField(default='', max_length=100)),
                ('carrera_personal', models.CharField(choices=[('Geología', 'Geología'), ('Minas', 'Minas'), ('Petróleos', 'Petróleos'), ('Ambiental', 'Ambiental')], default='No Aplica', max_length=20)),
                ('fecha_nacimiento', models.DateField(default=datetime.date(2000, 1, 1))),
                ('genero', models.CharField(default='', max_length=100)),
                ('estado_civil', models.CharField(choices=[('Soltero/a', 'Soltero/a'), ('Casado/a', 'Casado/a'), ('Viudo/a', 'Viudo/a'), ('Divorciado/a', 'Divorciado/a'), ('Unión de Hecho', 'Unión de Hecho')], default='Soltero/a', max_length=50)),
                ('correo_institucional', models.EmailField(default='default@uce.edu.com', max_length=254, unique=True)),
                ('telefono_contacto', models.CharField(default='', max_length=10)),
                ('asignaturas_impartidas', models.TextField(default='')),
                ('programa_educativo', models.CharField(choices=[('Pregrado', 'Pregrado'), ('Maestría', 'Maestría'), ('Doctorado', 'Doctorado')], default='Pregrado', max_length=20)),
                ('nombramiento', models.CharField(choices=[('Nombramiento definitivo', 'Nombramiento definitivo'), ('Nombramiento provisional', 'Nombramiento provisional'), ('Contrato', 'Contrato')], default='Pregrado', max_length=50)),
                ('tipo_contrato', models.CharField(choices=[('Tiempo Completo', 'Tiempo Completo'), ('Tiempo Parcial', 'Tiempo Parcial')], default='Tiempo total', max_length=20)),
            ],
            options={
                'verbose_name_plural': 'Lista Personal Academico',
            },
        ),
    ]
